<?php
/**
 * Copyright 2023 DPD France S.A.S.
 *
 * This file is a part of dpdfrance module for Prestashop.
 *
 * NOTICE OF LICENSE
 *
 * This file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for
 * your needs please contact us at support.ecommerce@dpd.fr.
 *
 * @author    DPD France S.A.S. <support.ecommerce@dpd.fr>
 * @copyright 2023 DPD France S.A.S.
 * @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

namespace PrestaShop\Module\DPDFrance\Util;

use Address;

class DPDStation
{
    public $line;
    public $contenu_fichier;

    public function __construct()
    {
        $this->line = str_pad('', 2247);
        $this->contenu_fichier = '';
    }

    /**
     * @param $txt
     * @param int $position
     * @param int $length
     */
    public function add($txt, $position, $length)
    {
        $txt = DPDTools::stripAccents($txt, 'DPDStation');
        $this->line = substr_replace($this->line, str_pad($txt, $length), $position, $length);
    }

    public function addLine()
    {
        if ($this->contenu_fichier != '') {
            $this->contenu_fichier = $this->contenu_fichier . "\r\n" . $this->line;
        } else {
            $this->contenu_fichier .= $this->line;
        }

        $this->line = str_pad('', 2247);
    }

    public function download()
    {
        while (@ob_end_clean()) {
        }
        header('Content-type: application/dat');
        header('Content-Disposition: attachment; filename="DPDFRANCE_' . date('dmY-His') . '.dat"');
        echo '$VERSION=110' . "\r\n";
        echo $this->contenu_fichier . "\r\n";
        exit;
    }

    /**
     * @param $internalref
     * @param int $order_id
     * @param string $service
     * @param $advalorem
     * @param $order_total_paid
     * @param $retour
     * @param $retour_option
     * @param $poids
     * @param Address $address_delivery
     * @param $code_pays_dest
     * @param string $mobile
     * @param string $tel_dest
     * @param string $relay_id
     * @param string $customer_email
     * @param string $nom_exp
     * @param string $address_exp
     * @param string $address2_exp
     * @param string $cp_exp
     * @param string $ville_exp
     * @param string $code_pays_exp
     * @param string $email_exp
     * @param string $tel_exp
     * @param string $gsm_exp
     * @param $instr_liv_cleaned
     * @param $compte_chargeur
     */
    public function formatRow(
        $internalref,
        $order_id,
        $service,
        $advalorem,
        $order_total_paid,
        $retour,
        $retour_option,
        $poids,
        $address_delivery,
        $code_pays_dest,
        $mobile,
        $tel_dest,
        $relay_id,
        $customer_email,
        $nom_exp,
        $address2_exp,
        $cp_exp,
        $ville_exp,
        $address_exp,
        $code_pays_exp,
        $tel_exp,
        $instr_liv_cleaned,
        $compte_chargeur,
        $email_exp,
        $gsm_exp
    ) {
        //  Référence client N°1
        $this->add($internalref, 0, 35);
        //  Poids du colis sur 8 caractères
        $this->add(str_pad((int)$poids, 8, '0', STR_PAD_LEFT), 37, 8);
        if ($service === 'REL') {
            //  Nom du destinataire
            $this->add($address_delivery->lastname, 60, 35);
            //  Prénom du destinataire
            $this->add($address_delivery->firstname, 95, 35);
        } else {
            if ($address_delivery->company) {
                //  Nom société
                $this->add($address_delivery->company, 60, 35);
                //  Nom et prénom du destinataire
                $this->add($address_delivery->lastname . ' ' . $address_delivery->firstname, 95, 35);
            } else {
                //  Nom et prénom du destinataire
                $this->add($address_delivery->lastname . ' ' . $address_delivery->firstname, 60, 35);
            }
        }
        //  Complément d’adresse 2 a 5
        $this->add($address_delivery->address2, 130, 140);
        //  Code postal
        $this->add($address_delivery->postcode, 270, 10);
        //  Ville
        $this->add($address_delivery->city, 280, 35);
        //  Rue
        $this->add($address_delivery->address1, 325, 35);
        //  Filler
        $this->add('', 360, 10);
        //  Code Pays destinataire
        $this->add($code_pays_dest, 370, 3);
        //  Téléphone
        $this->add($tel_dest, 373, 30);
        //  Nom expéditeur
        $this->add($nom_exp, 418, 35);
        //  Complément d’adresse 1
        $this->add($address2_exp, 453, 35);
        //  Code postal
        $this->add($cp_exp, 628, 10);
        //  Ville
        $this->add($ville_exp, 638, 35);
        //  Rue
        $this->add($address_exp, 683, 35);
        //  Code Pays
        $this->add($code_pays_exp, 728, 3);
        //  Tél.
        $this->add($tel_exp, 731, 30);
        //  Instructions de livraison
        $this->add($instr_liv_cleaned, 761, 140);
        //  Date d'expédition théorique
        $this->add(date('d/m/Y'), 901, 10);
        //  N° de compte chargeur DPD
        $this->add(str_pad($compte_chargeur, 8, '0', STR_PAD_LEFT), 911, 8);
        //  Code à barres
        $this->add($order_id, 919, 35);
        //  N° de commande - Id Order Prestashop
        $this->add($order_id, 954, 35);
        if ($advalorem && in_array($order_id, $advalorem)) {
            // Montant valeur colis
            $this->add(str_pad(number_format($order_total_paid, 2, '.', ''), 9, '0', STR_PAD_LEFT), 1018, 9);
        }
        //  Référence client N°2 - Id Order Prestashop
        $this->add($order_id, 1035, 35);
        //  E-mail expéditeur
        $this->add($email_exp, 1116, 80);
        //  GSM expéditeur
        $this->add($gsm_exp, 1196, 35);
        //  E-mail destinataire
        $this->add($customer_email, 1231, 80);
        //  GSM destinataire
        $this->add($mobile, 1311, 35);
        if ($service === 'REL') {
            //  Identifiant relais Pickup
            $this->add($relay_id, 1442, 8);
        } elseif ($service === 'PRE') {
            //  Flag Predict
            $this->add('+', 1568, 1);
        }
        //  Nom de famille du destinataire
        $this->add($address_delivery->lastname, 1569, 35);
        if ($retour && in_array($order_id, $retour) && $retour_option != 0) {
            //  Flag Retour
            $this->add($retour_option, 1834, 1);
        }
        $this->addLine();
    }
}
